name: build
permissions: read-all
on: [ push, pull_request ]

env:
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  ALLOWED_ENDPOINTS: >
    1k4dacprodeus2file4.blob.core.windows.net:443
    artifactcache.actions.githubusercontent.com:443
    api.azul.com:443
    api.github.com:443
    caffeine.gradle-enterprise.cloud:443
    cdn.azul.com:443
    checkerframework.org:443
    coveralls.io:443
    docs.oracle.com:443
    downloads.gradle-dn.com:443
    github.com:443
    guava.dev:443
    lightbend.github.io:443
    oss.sonatype.org:443
    pipelines.actions.githubusercontent.com:443
    plugins.gradle.org:443
    plugins-artifacts.gradle.org:443
    repo.gradle.org:443
    repo.maven.apache.org:443
    repo1.maven.org:443
    scans-in.gradle.com:443
    services.gradle.org:443
    sonarcloud.io:443
  MIN_JVM: 11
  MAX_JVM: 18

jobs:
  caffeine:
    name: Caffeine Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 18 ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./.github/scripts/test.sh \
            --caffeine=strongKeys \
            --caffeine=weakKeys \
            --caffeine=check
      - name: Compress test results
        uses: sibiraj-s/action-archiver@v1
        if: always() && (matrix.java == env.MAX_JVM)
        with:
          path: '**/results/*.xml'
          output: caffeine.tar.gz
          format: tar
          gzip: true
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always() && (matrix.java == env.MAX_JVM)
        with:
          retention-days: 1
          name: caffeine-test-results
          path: caffeine.tar.gz
      - name: Publish Coverage
        if: >
          matrix.java == env.MAX_JVM
          && github.event_name == 'push'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./gradlew --daemon coveralls -S
        continue-on-error: true
      - name: SonarQube
        if: >
          matrix.java == env.MAX_JVM
          && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          git fetch --unshallow
          ./gradlew --daemon sonarqube -S -Dsonar.branch.name=${GITHUB_REF##*/}
        continue-on-error: true
      - name: Publish Snapshot
        if: >
          matrix.java == env.MIN_JVM
          && github.event_name == 'push'
          && endsWith(github.ref, github.event.repository.default_branch)
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: 20BCF6B1
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: ./gradlew --daemon publishToSonatype
      - name: Stop Gradle daemon
        if: always()
        run: ./gradlew --stop
      - name: Cancel if failed
        uses: andymckay/cancel-action@0.2
        continue-on-error: true
        if: failure()

  guava:
    name: Guava Compatibility Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 18 ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@34cbc43f0b10c9dda284e663cf43c2ebaf83e956
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./.github/scripts/test.sh \
            --guava=strongKeys \
            --guava=weakKeys \
            --guava=check
      - name: Compress test results
        uses: sibiraj-s/action-archiver@v1
        if: always() && (matrix.java == env.MAX_JVM)
        with:
          path: '**/results/*.xml'
          output: guava.tar.gz
          format: tar
          gzip: true
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always() && (matrix.java == env.MAX_JVM)
        with:
          retention-days: 1
          name: guava-test-results
          path: guava.tar.gz
      - name: Stop Gradle daemon
        if: always()
        run: ./gradlew --stop
      - name: Cancel if failed
        uses: andymckay/cancel-action@0.2
        continue-on-error: true
        if: failure()

  lincheck:
    name: Linearization Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.MAX_JVM }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ env.MAX_JVM }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          JAVA_VERSION=$MAX_JVM
          ./gradlew lincheckTest
      - name: Compress test results
        uses: sibiraj-s/action-archiver@v1
        if: always()
        with:
          path: '**/results/*.xml'
          output: lincheck.tar.gz
          format: tar
          gzip: true
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          retention-days: 1
          name: lincheck-test-results
          path: lincheck.tar.gz

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [caffeine, guava, lincheck]
    permissions:
      checks: write
    steps:
      - name: Download Guava Tests
        uses: actions/download-artifact@v3
        with:
          name: guava-test-results
      - name: Download Caffeine Tests
        uses: actions/download-artifact@v3
        with:
          name: caffeine-test-results
      - name: Download Lincheck Tests
        uses: actions/download-artifact@v3
        with:
          name: lincheck-test-results
      - name: Decompress
        run: |
          mkdir guava && tar -zxf guava.tar.gz --directory guava
          mkdir caffeine && tar -zxf caffeine.tar.gz --directory caffeine
          mkdir lincheck && tar -zxf lincheck.tar.gz --directory lincheck
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        continue-on-error: true
        id: test-results
        with:
          comment_mode: off
          ignore_runs: true
          job_summary: true
          files: '**/*.xml'
      - name: Format Test Count
        run: |
          LANG=en_US.utf8
          COUNT=${{ fromJSON(steps.test-results.outputs.json).stats.runs }}
          echo "TEST_COUNT=$(printf "%'d" $COUNT)" >> $GITHUB_ENV
      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: tests
          color: 31c653
          path: badge.svg
          status: ${{ env.TEST_COUNT }}
      - name: Upload badge to Gist
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        if: endsWith(github.ref, github.event.repository.default_branch)
        with:
          gistURL: https://gist.githubusercontent.com/ben-manes/c20eb418f0e0bd6dfe1c25beb35faae4
          token: ${{ secrets.GIST_TOKEN }}
          file: badge.svg
